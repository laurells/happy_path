# Automated pipeline execution script
# Generated by setup_automation.ps1

param(
    [string]$LogLevel = "INFO"
)

# Set error action preference
$ErrorActionPreference = "Stop"

# Change to project directory
Set-Location "C:\Users\USER\Desktop\happy_path"

# Set up logging
$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
$logFile = "logs\pipeline_$timestamp.log"

# Ensure logs directory exists
if (-not (Test-Path "logs")) {
    New-Item -ItemType Directory -Path "logs" -Force | Out-Null
}

# Function to write to both console and log
function Write-Log {
    param($Message, $Level = "INFO")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logMessage = "$timestamp - $Level - $Message"
    Write-Host $logMessage
    Add-Content -Path $logFile -Value $logMessage
}

Write-Log "Starting automated pipeline execution" "INFO"
Write-Log "Log file: $logFile" "INFO"

try {
    # Run the pipeline
    $result = python scripts/run_daily_pipeline.py
    
    if ($LASTEXITCODE -eq 0) {
        Write-Log "Pipeline completed successfully" "INFO"
        exit 0
    } else {
        Write-Log "Pipeline failed with exit code $LASTEXITCODE" "ERROR"
        exit 1
    }
} catch {
    Write-Log "Pipeline execution error: $($_.Exception.Message)" "ERROR"
    exit 1
}
